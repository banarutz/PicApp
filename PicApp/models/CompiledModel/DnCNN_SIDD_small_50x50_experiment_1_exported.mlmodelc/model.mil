program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3402.3.2"}, {"coremlc-version", "3402.4.1"}, {"coremltools-component-torch", "2.5.1+cu124"}, {"coremltools-source-dialect", "TorchExport::ATEN"}, {"coremltools-version", "8.1"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 50, 50]> x) {
            tensor<string, []> conv2d_pad_type_0 = const()[name = tensor<string, []>("conv2d_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_pad_0 = const()[name = tensor<string, []>("conv2d_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_strides_0 = const()[name = tensor<string, []>("conv2d_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_dilations_0 = const()[name = tensor<string, []>("conv2d_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_groups_0 = const()[name = tensor<string, []>("conv2d_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> x_to_fp16_dtype_0 = const()[name = tensor<string, []>("x_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [64, 3, 3, 3]> p_model_0_weight_to_fp16 = const()[name = tensor<string, []>("p_model_0_weight_to_fp16"), val = tensor<fp16, [64, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [64]> p_model_0_bias_to_fp16 = const()[name = tensor<string, []>("p_model_0_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3584)))];
            tensor<fp16, [1, 3, 50, 50]> x_to_fp16 = cast(dtype = x_to_fp16_dtype_0, x = x)[name = tensor<string, []>("cast_1")];
            tensor<fp16, [1, 64, 50, 50]> conv2d_cast_fp16 = conv(bias = p_model_0_bias_to_fp16, dilations = conv2d_dilations_0, groups = conv2d_groups_0, pad = conv2d_pad_0, pad_type = conv2d_pad_type_0, strides = conv2d_strides_0, weight = p_model_0_weight_to_fp16, x = x_to_fp16)[name = tensor<string, []>("conv2d_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_cast_fp16 = relu(x = conv2d_cast_fp16)[name = tensor<string, []>("relu_cast_fp16")];
            tensor<string, []> conv2d_1_pad_type_0 = const()[name = tensor<string, []>("conv2d_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_1_pad_0 = const()[name = tensor<string, []>("conv2d_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_1_strides_0 = const()[name = tensor<string, []>("conv2d_1_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_1_dilations_0 = const()[name = tensor<string, []>("conv2d_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_1_groups_0 = const()[name = tensor<string, []>("conv2d_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_79_to_fp16 = const()[name = tensor<string, []>("const_79_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3776)))];
            tensor<fp16, [64]> const_80_to_fp16 = const()[name = tensor<string, []>("const_80_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77568)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_cast_fp16 = conv(bias = const_80_to_fp16, dilations = conv2d_1_dilations_0, groups = conv2d_1_groups_0, pad = conv2d_1_pad_0, pad_type = conv2d_1_pad_type_0, strides = conv2d_1_strides_0, weight = const_79_to_fp16, x = relu_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_1_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_cast_fp16)[name = tensor<string, []>("relu_1_cast_fp16")];
            tensor<string, []> conv2d_2_pad_type_0 = const()[name = tensor<string, []>("conv2d_2_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_2_pad_0 = const()[name = tensor<string, []>("conv2d_2_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_2_strides_0 = const()[name = tensor<string, []>("conv2d_2_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_2_dilations_0 = const()[name = tensor<string, []>("conv2d_2_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_2_groups_0 = const()[name = tensor<string, []>("conv2d_2_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_81_to_fp16 = const()[name = tensor<string, []>("const_81_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77760)))];
            tensor<fp16, [64]> const_82_to_fp16 = const()[name = tensor<string, []>("const_82_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151552)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_1_cast_fp16 = conv(bias = const_82_to_fp16, dilations = conv2d_2_dilations_0, groups = conv2d_2_groups_0, pad = conv2d_2_pad_0, pad_type = conv2d_2_pad_type_0, strides = conv2d_2_strides_0, weight = const_81_to_fp16, x = relu_1_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_1_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_2_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_1_cast_fp16)[name = tensor<string, []>("relu_2_cast_fp16")];
            tensor<string, []> conv2d_3_pad_type_0 = const()[name = tensor<string, []>("conv2d_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_3_pad_0 = const()[name = tensor<string, []>("conv2d_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_3_strides_0 = const()[name = tensor<string, []>("conv2d_3_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_3_dilations_0 = const()[name = tensor<string, []>("conv2d_3_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_3_groups_0 = const()[name = tensor<string, []>("conv2d_3_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_83_to_fp16 = const()[name = tensor<string, []>("const_83_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151744)))];
            tensor<fp16, [64]> const_84_to_fp16 = const()[name = tensor<string, []>("const_84_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(225536)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_2_cast_fp16 = conv(bias = const_84_to_fp16, dilations = conv2d_3_dilations_0, groups = conv2d_3_groups_0, pad = conv2d_3_pad_0, pad_type = conv2d_3_pad_type_0, strides = conv2d_3_strides_0, weight = const_83_to_fp16, x = relu_2_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_2_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_3_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_2_cast_fp16)[name = tensor<string, []>("relu_3_cast_fp16")];
            tensor<string, []> conv2d_4_pad_type_0 = const()[name = tensor<string, []>("conv2d_4_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_4_pad_0 = const()[name = tensor<string, []>("conv2d_4_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_4_strides_0 = const()[name = tensor<string, []>("conv2d_4_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_4_dilations_0 = const()[name = tensor<string, []>("conv2d_4_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_4_groups_0 = const()[name = tensor<string, []>("conv2d_4_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_85_to_fp16 = const()[name = tensor<string, []>("const_85_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(225728)))];
            tensor<fp16, [64]> const_86_to_fp16 = const()[name = tensor<string, []>("const_86_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299520)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_3_cast_fp16 = conv(bias = const_86_to_fp16, dilations = conv2d_4_dilations_0, groups = conv2d_4_groups_0, pad = conv2d_4_pad_0, pad_type = conv2d_4_pad_type_0, strides = conv2d_4_strides_0, weight = const_85_to_fp16, x = relu_3_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_3_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_4_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_3_cast_fp16)[name = tensor<string, []>("relu_4_cast_fp16")];
            tensor<string, []> conv2d_5_pad_type_0 = const()[name = tensor<string, []>("conv2d_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_5_pad_0 = const()[name = tensor<string, []>("conv2d_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_5_strides_0 = const()[name = tensor<string, []>("conv2d_5_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_5_dilations_0 = const()[name = tensor<string, []>("conv2d_5_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_5_groups_0 = const()[name = tensor<string, []>("conv2d_5_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_87_to_fp16 = const()[name = tensor<string, []>("const_87_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299712)))];
            tensor<fp16, [64]> const_88_to_fp16 = const()[name = tensor<string, []>("const_88_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(373504)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_4_cast_fp16 = conv(bias = const_88_to_fp16, dilations = conv2d_5_dilations_0, groups = conv2d_5_groups_0, pad = conv2d_5_pad_0, pad_type = conv2d_5_pad_type_0, strides = conv2d_5_strides_0, weight = const_87_to_fp16, x = relu_4_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_4_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_5_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_4_cast_fp16)[name = tensor<string, []>("relu_5_cast_fp16")];
            tensor<string, []> conv2d_6_pad_type_0 = const()[name = tensor<string, []>("conv2d_6_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_6_pad_0 = const()[name = tensor<string, []>("conv2d_6_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_6_strides_0 = const()[name = tensor<string, []>("conv2d_6_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_6_dilations_0 = const()[name = tensor<string, []>("conv2d_6_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_6_groups_0 = const()[name = tensor<string, []>("conv2d_6_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_89_to_fp16 = const()[name = tensor<string, []>("const_89_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(373696)))];
            tensor<fp16, [64]> const_90_to_fp16 = const()[name = tensor<string, []>("const_90_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(447488)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_5_cast_fp16 = conv(bias = const_90_to_fp16, dilations = conv2d_6_dilations_0, groups = conv2d_6_groups_0, pad = conv2d_6_pad_0, pad_type = conv2d_6_pad_type_0, strides = conv2d_6_strides_0, weight = const_89_to_fp16, x = relu_5_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_5_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_6_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_5_cast_fp16)[name = tensor<string, []>("relu_6_cast_fp16")];
            tensor<string, []> conv2d_7_pad_type_0 = const()[name = tensor<string, []>("conv2d_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_7_pad_0 = const()[name = tensor<string, []>("conv2d_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_7_strides_0 = const()[name = tensor<string, []>("conv2d_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_7_dilations_0 = const()[name = tensor<string, []>("conv2d_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_7_groups_0 = const()[name = tensor<string, []>("conv2d_7_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_91_to_fp16 = const()[name = tensor<string, []>("const_91_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(447680)))];
            tensor<fp16, [64]> const_92_to_fp16 = const()[name = tensor<string, []>("const_92_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(521472)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_6_cast_fp16 = conv(bias = const_92_to_fp16, dilations = conv2d_7_dilations_0, groups = conv2d_7_groups_0, pad = conv2d_7_pad_0, pad_type = conv2d_7_pad_type_0, strides = conv2d_7_strides_0, weight = const_91_to_fp16, x = relu_6_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_6_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_7_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_6_cast_fp16)[name = tensor<string, []>("relu_7_cast_fp16")];
            tensor<string, []> conv2d_8_pad_type_0 = const()[name = tensor<string, []>("conv2d_8_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_8_pad_0 = const()[name = tensor<string, []>("conv2d_8_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_8_strides_0 = const()[name = tensor<string, []>("conv2d_8_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_8_dilations_0 = const()[name = tensor<string, []>("conv2d_8_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_8_groups_0 = const()[name = tensor<string, []>("conv2d_8_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_93_to_fp16 = const()[name = tensor<string, []>("const_93_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(521664)))];
            tensor<fp16, [64]> const_94_to_fp16 = const()[name = tensor<string, []>("const_94_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(595456)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_7_cast_fp16 = conv(bias = const_94_to_fp16, dilations = conv2d_8_dilations_0, groups = conv2d_8_groups_0, pad = conv2d_8_pad_0, pad_type = conv2d_8_pad_type_0, strides = conv2d_8_strides_0, weight = const_93_to_fp16, x = relu_7_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_7_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_8_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_7_cast_fp16)[name = tensor<string, []>("relu_8_cast_fp16")];
            tensor<string, []> conv2d_9_pad_type_0 = const()[name = tensor<string, []>("conv2d_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_9_pad_0 = const()[name = tensor<string, []>("conv2d_9_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_9_strides_0 = const()[name = tensor<string, []>("conv2d_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_9_dilations_0 = const()[name = tensor<string, []>("conv2d_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_9_groups_0 = const()[name = tensor<string, []>("conv2d_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_95_to_fp16 = const()[name = tensor<string, []>("const_95_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(595648)))];
            tensor<fp16, [64]> const_96_to_fp16 = const()[name = tensor<string, []>("const_96_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(669440)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_8_cast_fp16 = conv(bias = const_96_to_fp16, dilations = conv2d_9_dilations_0, groups = conv2d_9_groups_0, pad = conv2d_9_pad_0, pad_type = conv2d_9_pad_type_0, strides = conv2d_9_strides_0, weight = const_95_to_fp16, x = relu_8_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_8_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_9_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_8_cast_fp16)[name = tensor<string, []>("relu_9_cast_fp16")];
            tensor<string, []> conv2d_10_pad_type_0 = const()[name = tensor<string, []>("conv2d_10_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_10_pad_0 = const()[name = tensor<string, []>("conv2d_10_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_10_strides_0 = const()[name = tensor<string, []>("conv2d_10_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_10_dilations_0 = const()[name = tensor<string, []>("conv2d_10_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_10_groups_0 = const()[name = tensor<string, []>("conv2d_10_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_97_to_fp16 = const()[name = tensor<string, []>("const_97_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(669632)))];
            tensor<fp16, [64]> const_98_to_fp16 = const()[name = tensor<string, []>("const_98_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(743424)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_9_cast_fp16 = conv(bias = const_98_to_fp16, dilations = conv2d_10_dilations_0, groups = conv2d_10_groups_0, pad = conv2d_10_pad_0, pad_type = conv2d_10_pad_type_0, strides = conv2d_10_strides_0, weight = const_97_to_fp16, x = relu_9_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_9_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_10_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_9_cast_fp16)[name = tensor<string, []>("relu_10_cast_fp16")];
            tensor<string, []> conv2d_11_pad_type_0 = const()[name = tensor<string, []>("conv2d_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_11_pad_0 = const()[name = tensor<string, []>("conv2d_11_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_11_strides_0 = const()[name = tensor<string, []>("conv2d_11_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_11_dilations_0 = const()[name = tensor<string, []>("conv2d_11_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_11_groups_0 = const()[name = tensor<string, []>("conv2d_11_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_99_to_fp16 = const()[name = tensor<string, []>("const_99_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(743616)))];
            tensor<fp16, [64]> const_100_to_fp16 = const()[name = tensor<string, []>("const_100_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817408)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_10_cast_fp16 = conv(bias = const_100_to_fp16, dilations = conv2d_11_dilations_0, groups = conv2d_11_groups_0, pad = conv2d_11_pad_0, pad_type = conv2d_11_pad_type_0, strides = conv2d_11_strides_0, weight = const_99_to_fp16, x = relu_10_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_10_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_11_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_10_cast_fp16)[name = tensor<string, []>("relu_11_cast_fp16")];
            tensor<string, []> conv2d_12_pad_type_0 = const()[name = tensor<string, []>("conv2d_12_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_12_pad_0 = const()[name = tensor<string, []>("conv2d_12_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_12_strides_0 = const()[name = tensor<string, []>("conv2d_12_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_12_dilations_0 = const()[name = tensor<string, []>("conv2d_12_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_12_groups_0 = const()[name = tensor<string, []>("conv2d_12_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_101_to_fp16 = const()[name = tensor<string, []>("const_101_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817600)))];
            tensor<fp16, [64]> const_102_to_fp16 = const()[name = tensor<string, []>("const_102_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(891392)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_11_cast_fp16 = conv(bias = const_102_to_fp16, dilations = conv2d_12_dilations_0, groups = conv2d_12_groups_0, pad = conv2d_12_pad_0, pad_type = conv2d_12_pad_type_0, strides = conv2d_12_strides_0, weight = const_101_to_fp16, x = relu_11_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_11_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_12_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_11_cast_fp16)[name = tensor<string, []>("relu_12_cast_fp16")];
            tensor<string, []> conv2d_13_pad_type_0 = const()[name = tensor<string, []>("conv2d_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_13_pad_0 = const()[name = tensor<string, []>("conv2d_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_13_strides_0 = const()[name = tensor<string, []>("conv2d_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_13_dilations_0 = const()[name = tensor<string, []>("conv2d_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_13_groups_0 = const()[name = tensor<string, []>("conv2d_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_103_to_fp16 = const()[name = tensor<string, []>("const_103_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(891584)))];
            tensor<fp16, [64]> const_104_to_fp16 = const()[name = tensor<string, []>("const_104_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(965376)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_12_cast_fp16 = conv(bias = const_104_to_fp16, dilations = conv2d_13_dilations_0, groups = conv2d_13_groups_0, pad = conv2d_13_pad_0, pad_type = conv2d_13_pad_type_0, strides = conv2d_13_strides_0, weight = const_103_to_fp16, x = relu_12_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_12_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_13_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_12_cast_fp16)[name = tensor<string, []>("relu_13_cast_fp16")];
            tensor<string, []> conv2d_14_pad_type_0 = const()[name = tensor<string, []>("conv2d_14_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_14_pad_0 = const()[name = tensor<string, []>("conv2d_14_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_14_strides_0 = const()[name = tensor<string, []>("conv2d_14_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_14_dilations_0 = const()[name = tensor<string, []>("conv2d_14_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_14_groups_0 = const()[name = tensor<string, []>("conv2d_14_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_105_to_fp16 = const()[name = tensor<string, []>("const_105_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(965568)))];
            tensor<fp16, [64]> const_106_to_fp16 = const()[name = tensor<string, []>("const_106_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1039360)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_13_cast_fp16 = conv(bias = const_106_to_fp16, dilations = conv2d_14_dilations_0, groups = conv2d_14_groups_0, pad = conv2d_14_pad_0, pad_type = conv2d_14_pad_type_0, strides = conv2d_14_strides_0, weight = const_105_to_fp16, x = relu_13_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_13_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_14_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_13_cast_fp16)[name = tensor<string, []>("relu_14_cast_fp16")];
            tensor<string, []> conv2d_15_pad_type_0 = const()[name = tensor<string, []>("conv2d_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_15_pad_0 = const()[name = tensor<string, []>("conv2d_15_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_15_strides_0 = const()[name = tensor<string, []>("conv2d_15_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_15_dilations_0 = const()[name = tensor<string, []>("conv2d_15_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_15_groups_0 = const()[name = tensor<string, []>("conv2d_15_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_107_to_fp16 = const()[name = tensor<string, []>("const_107_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1039552)))];
            tensor<fp16, [64]> const_108_to_fp16 = const()[name = tensor<string, []>("const_108_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1113344)))];
            tensor<fp16, [1, 64, 50, 50]> _native_batch_norm_legit_no_training_14_cast_fp16 = conv(bias = const_108_to_fp16, dilations = conv2d_15_dilations_0, groups = conv2d_15_groups_0, pad = conv2d_15_pad_0, pad_type = conv2d_15_pad_type_0, strides = conv2d_15_strides_0, weight = const_107_to_fp16, x = relu_14_cast_fp16)[name = tensor<string, []>("_native_batch_norm_legit_no_training_14_cast_fp16")];
            tensor<fp16, [1, 64, 50, 50]> relu_15_cast_fp16 = relu(x = _native_batch_norm_legit_no_training_14_cast_fp16)[name = tensor<string, []>("relu_15_cast_fp16")];
            tensor<string, []> conv2d_16_pad_type_0 = const()[name = tensor<string, []>("conv2d_16_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> conv2d_16_pad_0 = const()[name = tensor<string, []>("conv2d_16_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> conv2d_16_strides_0 = const()[name = tensor<string, []>("conv2d_16_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> conv2d_16_dilations_0 = const()[name = tensor<string, []>("conv2d_16_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> conv2d_16_groups_0 = const()[name = tensor<string, []>("conv2d_16_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [3, 64, 3, 3]> p_model_47_weight_to_fp16 = const()[name = tensor<string, []>("p_model_47_weight_to_fp16"), val = tensor<fp16, [3, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1113536)))];
            tensor<fp16, [3]> p_model_47_bias_to_fp16 = const()[name = tensor<string, []>("p_model_47_bias_to_fp16"), val = tensor<fp16, [3]>([0x1.37cp-9, 0x1.0d4p-9, 0x1.92cp-10])];
            tensor<fp16, [1, 3, 50, 50]> conv2d_16_cast_fp16 = conv(bias = p_model_47_bias_to_fp16, dilations = conv2d_16_dilations_0, groups = conv2d_16_groups_0, pad = conv2d_16_pad_0, pad_type = conv2d_16_pad_type_0, strides = conv2d_16_strides_0, weight = p_model_47_weight_to_fp16, x = relu_15_cast_fp16)[name = tensor<string, []>("conv2d_16_cast_fp16")];
            tensor<fp16, [1, 3, 50, 50]> sub_cast_fp16 = sub(x = x_to_fp16, y = conv2d_16_cast_fp16)[name = tensor<string, []>("sub_cast_fp16")];
            tensor<string, []> sub_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("sub_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 3, 50, 50]> sub = cast(dtype = sub_cast_fp16_to_fp32_dtype_0, x = sub_cast_fp16)[name = tensor<string, []>("cast_0")];
        } -> (sub);
}